name: Build, Test & Release

on: [push]

permissions:
  contents: write

jobs:
  build_and_test:
    name: ðŸ›  Build and Test
    strategy:
      matrix:
        runner: [ubuntu-latest, windows-latest]
        arch: [amd64]
        include:
          - runner: ubuntu-latest
            arch: arm64
    runs-on: ${{matrix.runner}}
    steps:
      - uses: actions/checkout@v3

      - name: âš™ Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: ðŸ”¨ Build
        run: go build -o cursedl-${{runner.os}}-${{matrix.arch}}
        env:
          CGO_ENABLED: 0
          GOARCH: ${{matrix.arch}}

      - name: Add .exe to windows build
        if: runner.os == 'Windows'
        run: mv cursedl-${{runner.os}}-${{matrix.arch}} cursedl-${{runner.os}}-${{matrix.arch}}.exe

      - name: ðŸ”® Run tests
        run: go test .
        env:
          BINARY: ./cursedl-${{runner.os}}-${{matrix.arch}}
        if: matrix.arch != 'arm64'

      - name: â¬† Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{runner.os}}-${{matrix.arch}}
          path: cursedl-*

  release:
    name: ðŸš€ Release on GitHub
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build_and_test
    steps:
      - name: â¬‡ Download all artifacts
        uses: actions/download-artifact@v3

      - name: ðŸš€ Release
        uses: softprops/action-gh-release@v1
        with:
          files: build-*/*
